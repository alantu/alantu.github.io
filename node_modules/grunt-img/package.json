{
  "name": "grunt-img",
  "version": "0.1.8",
  "description": "Grunt task to optimize png and jpg images with optipng & jpegtran",
  "keywords": [
    "gruntplugin",
    "png",
    "jpg",
    "image optimizer",
    "compress image",
    "image",
    "web performance"
  ],
  "homepage": "https://github.com/heldr/grunt-img",
  "bugs": {
    "url": "https://github.com/heldr/grunt-img/issues"
  },
  "author": {
    "name": "Helder Santana",
    "email": "heldr@me.com",
    "url": "http://heldr.com"
  },
  "main": "grunt.js",
  "bin": {
    "grunt-img": "bin/grunt-img"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/heldr/grunt-img.git"
  },
  "dependencies": {
    "grunt": "~0.4.0",
    "which": "~1.0.5",
    "grunt-contrib-jshint": "~0.1.1"
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "licenses": {
    "type": "MIT"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-release": "~0.3.5"
  },
  "readme": "grunt-img\n=============\n\n[Grunt][grunt] task to optimize PNG and JPG images with [optipng][optipng] & [jpegtran][jpegtran] ([jpegtran-turbo][jpegtran-turbo] on win32).\n\n## Getting Started\n\nFirst, be sure that you have [optipng][optipng] 0.7(or earlier) and [jpegtran][jpegtran] installed in your system.\n\n### for Mac users\nYou can install with [homebrew][homebrew]\n```shell\nbrew install optipng jpeg\n```\n\n### for Linux users\nDebian, Ubuntu and Mint\n```shell\napt-get install optipng libjpeg libjpeg-progs\n```\nBoth libraries are easy to find for RPM distributions too.\n\n### for Windows users\nDon't worry because both libraries are included.\n\n### Setup task grunt-img with grunt.js\nInstall this task next to your project's [grunt.js gruntfile][getting_started] with:\n```shell\nnpm install grunt-img\n```\n\nThen add the line bellow to your project's `grunt.js` gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-img');\n```\nQuestions? Take a look at [this stream](http://shelr.tv/records/5007063396608020cc000117)\n\n## How to config\nGrunt provide a simple way to config its tasks, grunt-img follow the same principle:\n\n```js\ngrunt.initConfig({\n    img: {\n\n        // using only dirs with output path\n        task1: {\n            src: 'public/src',\n            dest: 'public/img'\n        },\n\n        // recursive extension filter with output path\n        task2: {\n            src: ['public/src/**/*.png'],\n            dest: 'public/img'\n        },\n\n        // file by file with output path\n        task3: {\n            src: ['public/src/logo.png','public/src/social.jpg'],\n            dest: 'public/img'\n        },\n\n        // single path to optimize and replace all images\n        task4: {\n            src: 'public/img'\n        },\n\n        // file by file to optimize and replace\n        task5: {\n            src: ['public/img/concert.jpg, public/img/halestorm.png']\n        },\n\n        // filter extension to optimize and replace\n        task6: {\n            src: ['public/img/*.png']\n        }\n    }\n});\n```\n\n\n## License\n\nMIT License\n(c) [Helder Santana](http://heldr.com)\n\nCredits\n---------------\n* HTML5 Boilerplate [node-build-script][node-build-script]\n\n[node-build-script]: http://github.com/h5bp/node-build-script\n[grunt]: https://github.com/cowboy/grunt\n[getting_started]: https://github.com/cowboy/grunt/blob/master/docs/getting_started.md\n[jpegtran]: http://jpegclub.org/jpegtran/\n[jpegtran-turbo]: http://libjpeg-turbo.virtualgl.org/\n[optipng]: http://optipng.sourceforge.net/\n[homebrew]: http://mxcl.github.com/homebrew/",
  "readmeFilename": "readme.md",
  "_id": "grunt-img@0.1.8",
  "_shasum": "ecd8ae3dc32a7dd722b2faf633ef8d80fab80fa6",
  "_from": "grunt-img@^0.1.8",
  "_resolved": "https://registry.npmjs.org/grunt-img/-/grunt-img-0.1.8.tgz"
}
